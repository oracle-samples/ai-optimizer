# Copyright (c) 2024, 2025, Oracle and/or its affiliates.
# All rights reserved. The Universal Permissive License (UPL), Version 1.0 as shown at http://oss.oracle.com/licenses/upl
# spell-checker: disable

---
apiVersion: v1
kind: Namespace
metadata:
  name: ${label}
---
apiVersion: v1
kind: Secret
metadata:
  name: ${label}-api-key
  namespace: ${label}
type: Opaque
stringData:
  apiKey: ${api_key}
---
apiVersion: v1
kind: Secret
metadata:
  name: ${adb_name}-authn
  namespace: ${label}
type: Opaque
stringData:
  username: ADMIN
  password: ${adb_password}
  service: ${adb_service}
---
apiVersion: "ingress.oraclecloud.com/v1beta1"
kind: IngressClassParameters
metadata:
  name: native-ic-params
  namespace: ${label}
spec:
  compartmentId: ${compartment_ocid}
  subnetId: ${lb_subnet_ocid}
  loadBalancerName: "${label}-lb"
  reservedPublicAddressId: ${lb_ip_ocid}
  isPrivate: false
  maxBandwidthMbps: ${lb_max_shape}
  minBandwidthMbps: ${lb_min_shape}
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: native-ic
  namespace: ${label}
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
    oci-native-ingress.oraclecloud.com/network-security-group-ids: ${lb_nsgs}
    oci-native-ingress.oraclecloud.com/id: ${lb_ocid}
    oci-native-ingress.oraclecloud.com/delete-protection-enabled: "true"
spec:
  controller: oci.oraclecloud.com/native-ingress-controller
  parameters:
    scope: Namespace
    namespace: ${label}
    apiGroup: ingress.oraclecloud.com
    kind: IngressClassParameters
    name: native-ic-params
---
apiVersion: batch/v1
kind: Job
metadata:
  name: buildkit
  namespace: ${label}
spec:
  template:
    spec:
      restartPolicy: Never
      initContainers:
        - name: prepare-source-code
          image: docker.io/alpine:latest
          command:
            - sh
            - -c
            - |
              wget -qO- https://api.github.com/repos/oracle-samples/ai-optimizer/releases/latest \
                | grep "tarball_url" \
                | cut -d '"' -f 4 \
                | xargs -I{} sh -c \
                  'wget -O /workspace/latest-release.tar.gz "{}" && \
                   tar -xzf /workspace/latest-release.tar.gz --strip-components=1 -C /workspace'		  	
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
      containers:
        - name: buildkit-server
          image: docker.io/moby/buildkit:master-rootless
          env:
            - name: BUILDKITD_FLAGS
              value: --oci-worker-no-process-sandbox
          command:
            - buildctl-daemonless.sh
          args:
            - build
            - --frontend
            - dockerfile.v0
            - --local
            - context=/workspace/src
            - --local
            - dockerfile=/workspace/src/server
            - --output 
            - type=image,name=${server_repository}:latest,push=true
          securityContext:
            seccompProfile:
              type: Unconfined
            appArmorProfile:
              type: Unconfined
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              readOnly: true
              mountPath: /workspace
            - mountPath: /home/user/.local/share/buildkit
              name: buildkitd
        - name: buildkit-client
          image: docker.io/moby/buildkit:master-rootless
          env:
            - name: BUILDKITD_FLAGS
              value: --oci-worker-no-process-sandbox
          command:
            - buildctl-daemonless.sh
          args:
            - build
            - --frontend
            - dockerfile.v0
            - --local
            - context=/workspace/src
            - --local
            - dockerfile=/workspace/src/client
            - --output 
            - type=image,name=${client_repository}:latest,push=true
          securityContext:
            seccompProfile:
              type: Unconfined
            appArmorProfile:
              type: Unconfined
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: workspace
              readOnly: true
              mountPath: /workspace
            - mountPath: /home/user/.local/share/buildkit
              name: buildkitd
      volumes:
        - name: workspace
          emptyDir: {}
        - name: buildkitd
          emptyDir: {}