[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-optimizer"
version = "1.0.0"
description = "Oracle AI Optimizer and Toolkit"
requires-python = ">=3.11"
license =  "UPL-1.0"
authors = [
    {name = "Oracle", email = "obaas_ww@oracle.com"}
]

# Common dependencies that are always needed
dependencies = [
    "langchain-core==0.3.65",
    "httpx==0.28.1",
    "oracledb~=3.1",
    "plotly==6.1.2",
]

[project.optional-dependencies]
# Server component dependencies
# torch is installed via requirements for platform specifics
server = [
    "bokeh==3.7.3",
    "evaluate==0.4.3",
    "fastapi==0.115.12",
    "faiss-cpu==1.11.0",
    "giskard==2.17.0",
    "langchain-cohere==0.4.4",
    "langchain-community==0.3.25",
    "langchain-huggingface==0.3.0",
    "langchain-ollama==0.3.3",
    "langchain-openai==0.3.23",
    "langgraph==0.4.8",
    "litellm==1.72.4",
    "llama_index==0.12.42",
    "lxml==5.4.0",
    "matplotlib==3.10.3",
    "oci~=2.0",
    "psutil==7.0.0",
    "python-multipart==0.0.20",
    "torch==2.7.1",
    "transformers==4.52.4",
    "umap-learn==0.5.7",
    "uvicorn==0.34.3",
]

# GUI component dependencies
client = [
    "streamlit==1.45.1",
]

# Test dependencies
test = [
    "pytest",
    "pytest-asyncio",
    "docker",
]

# All-in-one installation (server + client)
all = [
    "ai-optimizer[server]",
    "ai-optimizer[client]",
]

# All-in-one with tests
all-test = [
    "ai-optimizer[server]",
    "ai-optimizer[client]",
    "ai-optimizer[test]",
]

[tool.setuptools]
packages = ["server", "client", "common"]