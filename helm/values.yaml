## Copyright (c) 2024, 2025, Oracle and/or its affiliates.
## Licensed under the Universal Permissive License v1.0 as shown at http://oss.oracle.com/licenses/upl.
# spell-checker: ignore ollama

# fullnameOverride: will override the default naming convention: <release-name>-<chart-name>
# Use with caution, as it disables Helm's automatic naming and can cause name collisions.
fullnameOverride: ""

# nameOverride: changes only the chart name portion of resource names but keeps the release name prefix.
nameOverride: ""

# -----------------------
# -- Global Configuration
global:
  # api: specify either this 'apiKey' directly or provide a secretName referring to an existing Secret containing the API key.
  api:
    # apiKey: key for making API calls to the server
    # Example: "abcd1234opt5678"
    apiKey: ""

    # secretName: name of the Secret that stores the API key.
    # This allows you to keep the API key out of the values file and manage it securely via Secrets.
    # Example: "optimizer-api-keys"
    secretName: ""

    # secretKey: key name inside the Secret that contains the API key when secretName defined
    # defaults to api-key when not specified
    # Example: "api-key"
    secretKey: ""

  # baseUrlPath: url path appended to the host 
  # Example: "/test" results in URLs like http://hostname/test/...
  baseUrlPath: "/"

  # enableClient: deploy Web frontend client
  enableClient: true

  # enableOllama: deploy Ollama and optionally pull models
  enableOllama: true

# -----------------------
# -- Server Configuration
server:
  # replicaCount: number of desired pod replicas for the Deployment when autoscaling is disabled
  replicaCount: 1

  # autoscaling: HPA when enabled, requires metrics-server to be installed
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # imagePullSecrets: Secret name containing image pull secrets
  imagePullSecrets: []
    # - name: registry_cred

  # image: image and tag to pull incl policy
  image:
    repository: localhost/ai-optimizer-server
    tag: latest
  imagePullPolicy: IfNotPresent

  # service: type of Kubernetes service to expose the HTTP port.
  service:
    http:
      type: "ClusterIP"

  # ingress: controls the Ingress resource to expose the service.
  ingress:
    enabled: false
    className: nginx # IngressClass name (e.g., "nginx" for NGINX ingress controller)
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/upstream-vhost: "localhost"
    tls: []
      # - hosts:
      #     - example.com
      #   secretName: example-tls

  # oci_config: provide the configFileSecret containing a config file and the key_file(s)
  # use the scripts/oci_config.py script to help create the secret
  oci_config:
    # oke: will enable workload identity principals (must be implemented)
    oke: false
    tenancy: ""
    user: ""
    fingerprint: ""
    region: ""
    configFileSecret: ""

  # models: specify secretName and secretKey to enable 3rd-Party Models
  models:
    openAI:
      # secretName: "openai-secret"
      # secretKey: ""       # Optional, defaults to "apiKey" if not specified
    perplexity:
      # secretName: "perplexity-secret"
      # # secretKey omitted, will default to "apiKey"
    cohere:
      # secretName: "cohere-secret"
      # secretKey: "customKeyName"  # Example of overriding the default key

# -----------------------
# -- Client Configuration
# -- enabled/disable from global.enableClient
client:
  # replicaCount: number of desired pod replicas for the Deployment when autoscaling is disabled
  replicaCount: 1

  # autoscaling: HPA when enabled, requires metrics-server to be installed
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # imagePullSecrets: Secret name containing image pull secrets
  imagePullSecrets: []
    # - name: registry_cred

  # image: image and tag to pull incl policy
  image:
    repository: localhost/ai-optimizer-client
    tag: latest
  imagePullPolicy: IfNotPresent

  # service: type of Kubernetes service to expose the HTTP port.
  service:
    http:
      type: "ClusterIP"

  # ingress: controls the Ingress resource to expose the service.
  ingress:
    enabled: false
    className: nginx # IngressClass name (e.g., "nginx" for NGINX ingress controller)
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/upstream-vhost: "localhost"
    tls: []
      # - hosts:
      #     - example.com
      #   secretName: example-tls

  # features: enable/disable specific client features
  features:
    disableTestbed: false
    disableApi: false
    disableTools: false
    disableDbCfg: false
    disableModelCfg: false
    disableOciCfg: false
    disableSettings: false

# -----------------------
# -- Ollama Configuration
# -- enabled/disable from global.enableOllama
ollama:
  # replicaCount: number of desired pod replicas for the Deployment
  replicaCount: 1

  # imagePullSecrets: Secret name containing image pull secrets
  imagePullSecrets: []
    # - name: registry_cred

  # image: image and tag to pull incl policy
  image:
    repository: docker.io/ollama/ollama
    tag: "latest"
  imagePullPolicy: IfNotPresent

  # service: type of Kubernetes service to expose the HTTP port.
  service:
    http:
      type: "ClusterIP"

  # models: to automatically deploy if enabled
  models:
    enabled: true
    modelPullList:
      - llama3.1
      - mxbai-embed-large

  # resources: requests and limits for the container
  # Often used to ensure pod is running on a GPU worker
  resources: {}
    # limits:
    #   nvidia.com/gpu: 1

  # nodeSelector: to constrain pods to specific nodes
  nodeSelector: {}
    # disktype: ssd

  # affinity: rules for scheduling pods
  affinity: {}
    # podAntiAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     - labelSelector:
    #         matchExpressions:
    #           - key: app
    #             operator: In
    #             values:
    #               - my-app
    #       topologyKey: "kubernetes.io/hostname"

  # tolerations: for scheduling pods on tainted nodes
  tolerations: []
    # - key: "key1"
    #   operator: "Exists"
    #   effect: "NoSchedule"