## Copyright (c) 2024, 2025, Oracle and/or its affiliates.
## Licensed under the Universal Permissive License v1.0 as shown at http://oss.oracle.com/licenses/upl.
# spell-checker: ignore SIDB SPFILE VARCHAR nindent sqlplus sysdba tablespace tblspace

{{- if .Values.database }}
{{- if eq .Values.database.type "SIDB-FREE" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-custom-scripts
  labels:
    {{- include "app.labels" . | nindent 4 }}
data:
  init.sh: |
    sqlplus <<- EOF
    WHENEVER SQLERROR EXIT 1
    WHENEVER OSERROR EXIT 1
    connect / as sysdba
    ALTER SYSTEM SET VECTOR_MEMORY_SIZE=512M SCOPE=SPFILE;
    ALTER SESSION SET CONTAINER=FREEPDB1;
    DECLARE
      l_conn_user VARCHAR2(255);
      l_user      VARCHAR2(255);
      l_tblspace  VARCHAR2(255);
    BEGIN
      BEGIN
          SELECT user INTO l_conn_user FROM DUAL;
          SELECT username INTO l_user FROM DBA_USERS WHERE USERNAME='AI_OPTIMIZER';
      EXCEPTION WHEN no_data_found THEN
          EXECUTE IMMEDIATE 'CREATE USER "AI_OPTIMIZER" IDENTIFIED BY "${ORACLE_PWD}"';
      END;
      SELECT default_tablespace INTO l_tblspace FROM dba_users WHERE username = 'AI_OPTIMIZER';
      EXECUTE IMMEDIATE 'ALTER USER "AI_OPTIMIZER" QUOTA UNLIMITED ON ' || l_tblspace;
      EXECUTE IMMEDIATE 'GRANT DB_DEVELOPER_ROLE TO "AI_OPTIMIZER"';
      EXECUTE IMMEDIATE 'ALTER USER "AI_OPTIMIZER" DEFAULT ROLE ALL';
    END;
    /
    STARTUP FORCE;
    ALTER SYSTEM REGISTER;
    EOF
{{- else if eq .Values.database.type "ADB-FREE" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-custom-scripts
  labels:
    {{- include "app.labels" . | nindent 4 }}
data:
  init.sh: |
    sql /nolog <<- EOF
    WHENEVER SQLERROR EXIT 1
    WHENEVER OSERROR EXIT 1
    connect ADMIN/${DB_PASSWORD}@//${DB_DSN}
    DECLARE
      l_conn_user VARCHAR2(255);
      l_user      VARCHAR2(255);
      l_tblspace  VARCHAR2(255);
    BEGIN
      BEGIN
          SELECT user INTO l_conn_user FROM DUAL;
          SELECT username INTO l_user FROM DBA_USERS WHERE USERNAME='${DB_USERNAME}';
      EXCEPTION WHEN no_data_found THEN
          EXECUTE IMMEDIATE 'CREATE USER "${DB_USERNAME}" IDENTIFIED BY "${DB_PASSWORD}"';
      END;
      SELECT default_tablespace INTO l_tblspace FROM dba_users WHERE username = '${DB_USERNAME}';
      EXECUTE IMMEDIATE 'ALTER USER "${DB_USERNAME}" QUOTA UNLIMITED ON ' || l_tblspace;
      EXECUTE IMMEDIATE 'GRANT DB_DEVELOPER_ROLE TO "${DB_USERNAME}"';
      EXECUTE IMMEDIATE 'GRANT EXECUTE ON DBMS_CLOUD TO "${DB_USERNAME}"';
      EXECUTE IMMEDIATE 'GRANT EXECUTE ON DBMS_CLOUD_AI TO "${DB_USERNAME}"';
      EXECUTE IMMEDIATE 'GRANT EXECUTE ON DBMS_CLOUD_PIPELINE TO "${DB_USERNAME}"';
      EXECUTE IMMEDIATE 'ALTER USER "${DB_USERNAME}" DEFAULT ROLE ALL';
    END;
    /
    BEGIN  
      DBMS_NETWORK_ACL_ADMIN.APPEND_HOST_ACE(
        host => '${API_SERVER_HOST}',
        ace  => xs\$ace_type(privilege_list => xs\$name_list('http'),
                            principal_name => '${DB_USERNAME}',
                            principal_type => xs_acl.ptype_db)
      );
    END;
    /
    BEGIN
      DBMS_CLOUD.CREATE_CREDENTIAL(
        credential_name   => 'AI_OPTIMIZER_CRED', 
        username          =>  'SELECTAI', 
        password          =>  '${API_SERVER_KEY}'
      );
      EXCEPTION WHEN OTHERS THEN
        IF SQLCODE = -20022 THEN NULL;
        ELSE RAISE;
        END IF;
    END;
    /
    -- !! NOT YET GA !!
    -- BEGIN
    --  DBMS_CLOUD_AI.CREATE_PROFILE(
    --      profile_name => 'AI_OPTIMIZER' ,
    --      attributes   => '{"provider_endpoint": "${API_SERVER_HOST}:8000",
    --                        "model": "openai"}'
    --  );
    --END;
    --/
    EOF
{{- else if .Values.oci_config }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "release.name" . }}-oci-config
  labels:
    {{- include "app.labels" . | nindent 4 }}
data:
  {{- with .Values.oci_config }}
    {{- if .tenancy }}
  tenancy: {{ .tenancy | quote }}
    {{- end }}
    {{- if .user }}
  user: {{ .user | quote }}
    {{- end }}
    {{- if .fingerprint }}
  fingerprint: {{ .fingerprint | quote }}
    {{- end }}
    {{- if .region }}
  region: {{ .region | quote }}
    {{- end }}
  {{- end }}
{{- end -}}
{{- end -}}