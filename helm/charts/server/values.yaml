## Copyright (c) 2024, 2025, Oracle and/or its affiliates.
## Licensed under the Universal Permissive License v1.0 as shown at http://oss.oracle.com/licenses/upl.
# spell-checker: ignore

# -- Number of desired pod replicas for the Deployment when autoscaling is disabled
replicaCount: 1

# autoscaling: HPA when enabled, requires metrics-server to be installed
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# -- Secret name containing image pull secrets
imagePullSecrets: []
  # - name: registry_cred

# image: Image and Tag to pull including pull policy
image:
  # -- Image Repository
  repository: localhost/ai-optimizer-server
  # -- Image Tag
  tag: latest
imagePullPolicy: IfNotPresent

# service: type of Kubernetes service to expose the HTTP port.
service:
  http:
    type: "ClusterIP"

# ingress: controls the Ingress resource to expose the service.
ingress:
  enabled: false
  className: nginx # IngressClass name (e.g., "nginx" for NGINX ingress controller)
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/upstream-vhost: "localhost"
  tls: []
    # - hosts:
    #     - example.com
    #   secretName: example-tls

# -- Oracle Database Configuration
database:
  # -- Either SIDB-FREE, ADB-FREE, or ADB-S
  type: ""
  # -- For SIDB-FREE/ADB-FREE, location of the image and its tag
  # Exclude for ADB-S
  image:
    repository: ""
    tag: latest
  # -- For ADB-S, OCID of the Autonomous Database
  # Exclude for SIDB-FREE/ADB-FREE
  ocid: ""
  # -- Authentication/Connection Details
  authN:
    # -- Name of Secret containing the authentication/connection details
    secretName: "db-authn"
    # -- Key in secretName containing the username
    usernameKey: "username"
    # -- Key in secretName containing the password
    passwordKey: "password"
    # -- Key in secretName containing the connection service name
    serviceKey: "service"

# -- Oracle Cloud Infrastructure Configuration
oci_config:
  # -- Enable Workload Identity Principals (WIP) (must be implemented)
  oke: false
  # -- Tenancy OCID.  Required when specifying keySecretName.
  tenancy: ""
  # -- User OCID.  Required when specifying keySecretName.
  user: ""
  # -- Fingerprint.  Required when specifying keySecretName.
  fingerprint: ""
  # -- Region. Required when oke is true.
  region: ""
  # -- Secret containing an OCI config file and the key_file(s).
  # Use the scripts/oci_config.py script to help create the secret based on an existing ~.oci/config file
  fileSecretName: ""
  # -- Secret containing a single API key corresponding to above tenancy configuration
  # This used by OraOperator when not running in OKE
  keySecretName: ""

# -- Specify secretName and secretKey to enable 3rd-Party Models
models:
  # -- OpenAI API Key
  openAI:
    secretName: ""
    secretKey: "apiKey"
  # -- Perplexity API Key
  perplexity:
    secretName: ""
    secretKey: "apiKey"
  # -- Cohere API Key
  cohere:
    secretName: ""
    secretKey: "apiKey"

# livenessProbe: defines settings for the liveness probe.
# Set `enabled` to false to disable the probe entirely.
livenessProbe:
  enabled: true
  initialDelaySeconds: 10       # Time (in seconds) to wait before starting the probe
  periodSeconds: 30             # Time (in seconds) between probe checks
  timeoutSeconds: 30            # Time (in seconds) to wait for probe response
  failureThreshold: 10          # Number of failures before marking the container as unhealthy
  successThreshold: 1           # Number of successes required to consider the container healthy

# readinessProbe: defines settings for the liveness probe.
# Set `enabled` to false to disable the probe entirely.
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 15
  timeoutSeconds: 15
  failureThreshold: 10
  successThreshold: 1 

# volumes: user defined additional volumes
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# volumeMounts:  user defined additional volumeMounts
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# podLabels: additional key:value labels to add to pods
podLabels: {}
  # environment: "production"
  # team: "devops"

# podAnnotations: additional key:value annotations to add to the Pod template metadata
podAnnotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "9102"

# resources: requests and limits for the container
# Recommended not to specify default resources and to leave this as a conscious choice for the user.
# This also increases chances charts run on environments with little resources, such as Kind. 
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# nodeSelector: to constrain pods to specific nodes
nodeSelector: {}
  # disktype: ssd

# affinity: rules for scheduling pods
affinity: {}
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchExpressions:
  #           - key: app
  #             operator: In
  #             values:
  #               - my-app
  #       topologyKey: "kubernetes.io/hostname"

# tolerations: for scheduling pods on tainted nodes
tolerations: []
  # - key: "key1"
  #   operator: "Exists"
  #   effect: "NoSchedule"