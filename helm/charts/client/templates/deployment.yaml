## Copyright (c) 2024, 2025, Oracle and/or its affiliates.
## Licensed under the Universal Permissive License v1.0 as shown at http://oss.oracle.com/licenses/upl.
# spell-checker: ignore nindent tolerations streamlit snakecase

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
    "app.kubernetes.io/component": "frontend"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
      "app.kubernetes.io/component": "frontend"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        "app.kubernetes.io/component": "frontend"
    spec:
      securityContext:
        fsGroup: 10001
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          env:
            - name: API_SERVER_URL
              value: {{ include "server.serviceUrl" . }}
            - name: API_SERVER_PORT
              value: "8000"
            - name: API_SERVER_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.apiSecretName" . }}
                  key: {{ include "app.apiSecretKey" . }}
            {{- range $key, $value := .Values.features }}
            {{- if $value }}
            - name: {{ snakecase $key | upper }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: client-port
              containerPort: 8501
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ include "getPath" . }}ping
              port: client-port
            {{- with omit .Values.livenessProbe "enabled" }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ include "getPath" . }}ping
              port: client-port
            {{- with omit .Values.readinessProbe "enabled" }}
               {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: "/app/tmp"
            - name: streamlit-config
              mountPath: /app/.streamlit
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: streamlit-config
          configMap:
            name: {{ include "app.fullname" . }}-st-config
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}